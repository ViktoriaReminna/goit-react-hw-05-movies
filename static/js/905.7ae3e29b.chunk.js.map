{"version":3,"file":"static/js/905.7ae3e29b.chunk.js","mappings":"0MAEaA,EAAmBC,EAAAA,GAAAA,GAAH,8H,wCCiBhBC,GAjBaD,EAAAA,GAAAA,GAAH,mZAiBGA,EAAAA,GAAAA,IAAH,yGAQVE,EAAQF,EAAAA,GAAAA,IAAH,mFAMLG,EAAWH,EAAAA,GAAAA,IAAH,0CAIRI,EAAQJ,EAAAA,GAAAA,GAAH,0F,UC3BLK,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACTC,EAAuDH,EAAvDG,GAAIC,EAAmDJ,EAAnDI,MAAOC,EAA4CL,EAA5CK,aAAcC,EAA8BN,EAA9BM,YAAaC,EAAiBP,EAAjBO,aAC9C,OACE,SAACd,EAAD,WACE,UAAC,KAAD,CAASe,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMT,GAA7C,WACE,UAACN,EAAD,YACE,SAAC,MAAD,IAAiB,KAAC,4BAAkC,GAA3BgB,KAAKC,MAAMP,GAAmB,WAEzD,SAACT,EAAD,CACEiB,IACEP,EAAW,0CAC4BA,GACnCQ,EAENC,IAAKX,KAEP,UAACP,EAAD,YACE,SAACC,EAAD,UAAQM,KACR,yBAAG,kBACa,0BAAOG,cAhBNJ,EAsB1B,EChCYa,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3B,OACE,SAACxB,EAAD,UACGwB,EAAWC,KAAI,SAAAlB,GAAK,OACnB,SAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMG,GADH,KAK1B,C,iLCVYgB,EAAazB,EAAAA,GAAAA,KAAH,kF,UCAV0B,EAAQ1B,EAAAA,GAAAA,MAAH,sXAmBL2B,EAAY3B,EAAAA,GAAAA,OAAH,2LAWT4B,EAAO5B,EAAAA,GAAAA,KAAH,oF,UCxBJ6B,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,UAACL,EAAD,CAAME,SARa,SAAAI,GACnBA,EAAEC,iBACF,IAAMC,EAAaJ,EAAWK,OAC9BJ,EAAc,IACdH,EAASM,EACV,EAGC,WACE,SAACV,EAAD,CACEY,KAAK,OACLC,YAAY,gBACZC,MAAOR,EACPS,SAlBgB,SAAAP,GACpB,IAAMQ,EAAOR,EAAES,OAAOH,MACtBP,EAAcS,EAAKE,cACpB,EAgBKC,UAAQ,KAEV,SAAClB,EAAD,CAAWW,KAAK,SAAS,aAAW,SAApC,UACE,SAAC,MAAD,CAAcQ,MAAO,CAAEC,KAAM,OAAQC,MAAO,OAAQC,OAAQ,cAInE,E,UCiBD,EAxCe,WACb,OAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAkBF,EAAaG,IAAI,SA6BzC,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BC,EAAAA,EAAAA,IAAgBH,GAF3C,OAEUI,EAFV,QAGUC,EAAOD,EAASC,KAAKC,SAEtBC,SAAWH,EAASC,KAAKC,QAC1BE,EAAAA,GAAAA,MAAA,mCAAwCR,IACxCJ,EAAUS,GAPlB,gDASII,QAAQC,IAAR,MATJ,0DAJc,sBACTV,GADS,mCAgBdW,EACD,GAAE,CAACX,KAGF,UAAC9B,EAAD,YACE,SAACI,EAAD,CAAWC,SA7BE,SAAAM,GACI,KAAfA,EACF2B,EAAAA,GAAAA,MAAY,sCAEZT,EAAgB,CAAEa,MAAO/B,GAE5B,IAwBIc,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C","sources":["components/MovieList/MovieList.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/MovieList/MovieList.js","pages/Movies/Movies.styled.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  margin: 40px auto;\n`;\n","import styled from 'styled-components';\n\nexport const MovieItems = styled.li`\n  position: relative;\n  border: solid 1px #560206;\n  border-radius: 6px;\n  overflow: hidden;\n  max-width: 300px;\n  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 0.4s cubic-bezier(0.4, 0, 0.2, 1),\n    scale 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 15px 2px #00ced1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const RatingWrap = styled.div`\n  position: inherit;\n\n  text-align: center;\n  width: 40px;\n  height: 40px;\n`;\n\nexport const Image = styled.img`\n  height: 400px;\n  width: 300px;\n  margin-bottom: 15px;\n`;\n\nexport const InfoWrap = styled.div`\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  min-height: 50px;\n  max-width: 280px;\n  margin-bottom: 20px;\n`;\n","import { AiOutlineLike } from 'react-icons/ai';\n\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { MoviesListStyles } from '../MovieList/MovieList.styled';\n\nimport noPhoto from '../../image/noImage.png';\n\nimport { Image, InfoWrap, RatingWrap, Title } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const { id, title, vote_average, poster_path, release_date } = movie;\n  return (\n    <MoviesListStyles key={id}>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        <RatingWrap>\n          <AiOutlineLike /> <span>{Math.round(vote_average) * 10}%</span>\n        </RatingWrap>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : noPhoto\n          }\n          alt={title}\n        />\n        <InfoWrap>\n          <Title>{title}</Title>\n          <p>\n            Release date: <span>{release_date}</span>\n          </p>\n        </InfoWrap>\n      </NavLink>\n    </MoviesListStyles>\n  );\n};\n","import { MoviesListStyles } from '../MovieList/MovieList.styled';\n\nimport { MovieCard } from '../MovieCard/MovieCard';\n\nexport const MoviesList = ({ moviesData }) => {\n  return (\n    <MoviesListStyles>\n      {moviesData.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </MoviesListStyles>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainStyles = styled.main`\n  padding: 40px 30px;\n  min-height: calc(100vh - 64px);\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 450px;\n  padding: 10px;\n  border-radius: 4px;\n  border: solid 1px #00ced1;\n  background-color: inherit;\n  outline: none;\n  color: #ffffffa2;\n  font-size: 16px;\n  height: 40px;\n  transition: box-shadow 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 1px #00ced1;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: inherit;\n  border-radius: 4px;\n  border: solid 1px #00ced1;\n  height: 40px;\n  width: 40px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 450px;\n  position: relative;\n`;\n","import { useState } from 'react';\n\nimport { BiSearchAlt2 } from 'react-icons/bi';\n\nimport { Form, Input } from '../SearchBar/SearchBar.styled';\n\nimport { SearchBtn } from '../SearchBar/SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const onInputChange = e => {\n    const name = e.target.value;\n    setInputValue(name.toLowerCase());\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchName = inputValue.trim();\n    setInputValue('');\n    onSubmit(searchName);\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={inputValue}\n        onChange={onInputChange}\n        required\n      />\n      <SearchBtn type=\"submit\" aria-label=\"Search\">\n        <BiSearchAlt2 style={{ fill: '#fff', width: '20px', height: '20px' }} />\n      </SearchBtn>\n    </Form>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nimport { getMoviesByName } from '../../service/movies-service';\n\nimport { MainStyles } from '../Movies/Movies.styled';\n\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\n\nimport { MoviesList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const fromQueryString = searchParams.get('query');\n\n  const getQuery = searchName => {\n    if (searchName === '') {\n      toast.error('Please enter the name of the movie');\n    } else {\n      setSearchParams({ query: searchName });\n    }\n  };\n\n  useEffect(() => {\n    if (!fromQueryString) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getMoviesByName(fromQueryString);\n        const data = response.data.results;\n\n        data.length === response.data.results\n          ? toast.error(`Sorry, we can't find any ${fromQueryString}`)\n          : setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [fromQueryString]);\n\n  return (\n    <MainStyles>\n      <SearchBar onSubmit={getQuery} />\n      {movies && <MoviesList movies={movies} />}\n    </MainStyles>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesListStyles","styled","RatingWrap","Image","InfoWrap","Title","MovieCard","movie","location","useLocation","id","title","vote_average","poster_path","release_date","to","state","from","Math","round","src","noPhoto","alt","MoviesList","moviesData","map","MainStyles","Input","SearchBtn","Form","SearchBar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","searchName","trim","type","placeholder","value","onChange","name","target","toLowerCase","required","style","fill","width","height","movies","setMovies","useSearchParams","searchParams","setSearchParams","fromQueryString","get","useEffect","getMoviesByName","response","data","results","length","toast","console","log","fetchData","query"],"sourceRoot":""}