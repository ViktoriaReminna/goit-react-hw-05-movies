{"version":3,"file":"static/js/771.9192273c.chunk.js","mappings":"mUAGaA,EAAaC,EAAAA,GAAAA,KAAH,6EAwBVC,GAnBYD,EAAAA,GAAAA,OAAH,iYAmBEA,EAAAA,GAAAA,IAAH,wIAQRE,EAAQF,EAAAA,GAAAA,IAAH,iSAgBLG,EAAWH,EAAAA,GAAAA,EAAH,yFAMRI,EAAQJ,EAAAA,GAAAA,GAAH,oEAKLK,EAAYL,EAAAA,GAAAA,GAAH,oEAKTM,EAAON,EAAAA,GAAAA,EAAH,oEAKJO,EAAOP,EAAAA,GAAAA,IAAH,wKASJQ,EAAeR,EAAAA,GAAAA,GAAH,4GAOZS,GAAWT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,6M,oBCcrB,EA9EsB,WAAO,IAAD,EAClBW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAmBA,IAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BC,EAAAA,EAAAA,IAAaV,GAFxC,OAEUW,EAFV,OAGUR,EAAYQ,EAASC,KAC3BR,EAAaD,GACbK,EAAUL,EAAUI,QALxB,gDAOIM,QAAQC,MAAR,MAPJ,0DAJc,sBACTd,GADS,mCAcde,EACD,GAAE,CAACf,KAECG,EACH,OAAO,SAACa,EAAA,EAAD,IAGT,IAAQC,EACNd,EADMc,eAAgBC,EACtBf,EADsBe,aAAcC,EACpChB,EADoCgB,aAAcC,EAClDjB,EADkDiB,YAAaC,EAC/DlB,EAD+DkB,SAGjE,OACE,UAACjC,EAAD,YACE,UAAC,KAAD,CAAMkC,IAAI,UAAAjB,EAASkB,aAAT,eAAgBC,OAAQ,IAAlC,WACE,SAAC,MAAD,CAAaC,MAAO,CAAEC,YAAa,UAAY,aAGhDvB,IACC,UAACb,EAAD,YACE,SAACC,EAAD,CACEoC,IACEP,EAAW,0CAC4BA,GACnCQ,EAENC,IAAKZ,KAEP,UAACrB,EAAD,YACE,UAACH,EAAD,WACGwB,EAAgB,KACjB,4BAAM,IAAE,IAAIa,KAAKZ,GAAca,cAAc,WAE/C,UAACpC,EAAD,WAAM,gBACQ,4BAAkC,GAA3BqC,KAAKC,MAAMd,GAAmB,WAEnD,UAAC3B,EAAD,WAAU,IAAE6B,MACZ,SAAC3B,EAAD,UAAW,aACQ,IAAlBa,EAAO2B,SAAgB,SAACxC,EAAD,UAAW,WAClCa,EAAO4B,KAAI,SAAAC,GACV,OAAO,0BAAsBA,EAAMC,MAAjBD,EAAME,GACzB,WAIP,UAACzC,EAAD,YACE,yBACE,SAACC,EAAD,CAAUwB,GAAE,OAAZ,SAAsB,YAExB,yBACE,SAACxB,EAAD,CAAUwB,GAAE,UAAZ,SAAyB,kBAG7B,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACxB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MainStyles = styled.main`\n  min-height: calc(100vh - 64px);\n  padding: 20px;\n`;\n\nexport const BtnGoBack = styled.button`\n  width: 100px;\n  padding: 8px 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  border: solid 1px #a9a9a9;\n  border-radius: 4px;\n  transition: color 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: inherit;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 13px 3px #a9a9a9;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  margin-bottom: 30px;\n  @media screen and (min-width: 780px) {\n    display: flex;\n    padding: 20px;\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 300px;\n  width: 100%;\n  border: solid 1px #a9a9a9;\n\n  @media screen and (min-width: 780px) {\n    margin-right: 20px;\n  }\n\n  @media screen and (max-width: 779px) {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Overview = styled.p`\n  max-width: 700px;\n  margin-bottom: 20px;\n  font-size: 16px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 22px;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-bottom: 20px;\n  font-size: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  font-size: 16px;\n`;\n\nexport const Wrap = styled.div`\n  @media screen and (max-width: 779px) {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 400px;\n    text-align: center;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const InfoLink = styled(Link)`\n  padding: 8px 5px;\n  text-align: center;\n  border: solid 1px #a9a9a9;\n  width: 100px;\n  display: block;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 13px 3px #a9a9a9;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\n\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport noPhoto from 'image/noImage.png';\n\nimport { getMovieById } from '../../service/movies-service';\n\nimport {\n  Image,\n  InfoWrap,\n  InfoTitle,\n  MainStyles,\n  MoreInfoList,\n  Overview,\n  Text,\n  Title,\n  Wrap,\n  InfoLink,\n} from './MoviesDetails.styled';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getMovieById(movieId);\n        const movieInfo = response.data;\n        setMovieInfo(movieInfo);\n        setGenres(movieInfo.genres);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return <Loader />;\n  }\n\n  const { original_title, release_date, vote_average, poster_path, overview } =\n    movieInfo;\n\n  return (\n    <MainStyles>\n      <Link to={location.state?.from || '/'}>\n        <BsArrowLeft style={{ marginRight: '10px' }} />\n        Go back\n      </Link>\n      {movieInfo && (\n        <InfoWrap>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : noPhoto\n            }\n            alt={original_title}\n          />\n          <Wrap>\n            <Title>\n              {original_title}{' '}\n              <span>({new Date(release_date).getFullYear()})</span>\n            </Title>\n            <Text>\n              User Score: <span>{Math.round(vote_average) * 10}%</span>\n            </Text>\n            <Overview> {overview}</Overview>\n            <InfoTitle>Overview</InfoTitle>\n            {genres.length !== 0 && <InfoTitle>Genres</InfoTitle>}\n            {genres.map(genre => {\n              return <span key={genre.id}>{genre.name}</span>;\n            })}\n          </Wrap>\n        </InfoWrap>\n      )}\n      <MoreInfoList>\n        <li>\n          <InfoLink to={`cast`}>Cast</InfoLink>\n        </li>\n        <li>\n          <InfoLink to={`reviews`}>Reviews</InfoLink>\n        </li>\n      </MoreInfoList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MainStyles>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["MainStyles","styled","InfoWrap","Image","Overview","Title","InfoTitle","Text","Wrap","MoreInfoList","InfoLink","Link","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","genres","setGenres","useEffect","getMovieById","response","data","console","error","fetchData","Loader","original_title","release_date","vote_average","poster_path","overview","to","state","from","style","marginRight","src","noPhoto","alt","Date","getFullYear","Math","round","length","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}