{"version":3,"file":"static/js/589.8515b501.chunk.js","mappings":"+TAEaA,EAAWC,EAAAA,GAAAA,GAAH,4JASRC,EAAUD,EAAAA,GAAAA,GAAH,mJAUPE,EAAQF,EAAAA,GAAAA,IAAH,0JAULG,EAAOH,EAAAA,GAAAA,GAAH,gKASJI,EAAYJ,EAAAA,GAAAA,EAAH,gHAOTK,EAAYL,EAAAA,GAAAA,EAAH,mE,UC9BTM,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE2BC,EAAAA,EAAAA,IAAQN,GAFnC,OAEUO,EAFV,OAGIH,EAAQG,GAHZ,gDAKIC,QAAQC,MAAR,MALJ,0DALc,sBACTT,GADS,mCAcdU,EACD,GAAE,CAACV,IAEgB,IAAhBG,EAAKQ,QAEL,SAACb,EAAD,UAAW,8DAOb,SAACN,EAAD,UACGW,EAAKS,KAAI,SAAAC,GAAU,OAClB,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACED,EAAWE,aAAX,yCACsCF,EAAWE,cAC7CC,EAENC,IAAKJ,EAAWK,QAElB,SAACtB,EAAD,UAAOiB,EAAWK,QAClB,UAACrB,EAAD,WAAW,cAAYgB,EAAWM,eAVtBN,EAAWO,GADP,KAgBzB,EAED,G","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrap = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  justify-content: center;\n  flex-wrap: wrap;\n  border-top: solid 1px #00ced1;\n`;\n\nexport const CastBox = styled.li`\n  width: 100px;\n  height: 250px;\n\n  @media screen and (min-width: 780px) {\n    width: 150px;\n    height: 350px;\n  }\n`;\n\nexport const Photo = styled.img`\n  height: 150px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 780px) {\n    width: 150px;\n    height: 225px;\n  }\n`;\n\nexport const Name = styled.h3`\n  font-size: 10px;\n  text-align: center;\n  margin-bottom: 10px;\n  @media screen and (min-width: 780px) {\n    font-size: 15px;\n  }\n`;\n\nexport const Character = styled.p`\n  font-size: 8px;\n  @media screen and (min-width: 780px) {\n    font-size: 15px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport noImage from '../../image/noImage.png';\n\nimport { getCast } from '../../service/movies-service';\n\nimport {\n  CastBox,\n  CastWrap,\n  Character,\n  Name,\n  Photo,\n  ErrorText,\n} from './Cast.styled.js';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    async function fetchData() {\n      try {\n        const response = await getCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return (\n      <ErrorText>\n        We don't have any information about casts for this movie\n      </ErrorText>\n    );\n  }\n\n  return (\n    <CastWrap>\n      {cast.map(castMember => (\n        <CastBox key={castMember.id}>\n          <Photo\n            src={\n              castMember.profile_path\n                ? `https://image.tmdb.org/t/p/w500${castMember.profile_path}`\n                : noImage\n            }\n            alt={castMember.name}\n          />\n          <Name>{castMember.name}</Name>\n          <Character>Character: {castMember.character}</Character>\n        </CastBox>\n      ))}\n    </CastWrap>\n  );\n};\n\nexport default Cast;\n"],"names":["CastWrap","styled","CastBox","Photo","Name","Character","ErrorText","Cast","movieId","useParams","useState","cast","setCast","useEffect","getCast","response","console","error","fetchData","length","map","castMember","src","profile_path","noImage","alt","name","character","id"],"sourceRoot":""}